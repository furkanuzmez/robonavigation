<!DOCTYPE html>

<script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.18.0/axios.js"></script>
<html>
 
<body  onload="get_coordinates()">
  <div id="button-box"  style="background-color: lawngreen;width:max-content;" >
    <button onclick="addpoints()"> PathFinder</button>
    <button onclick="get_coordinates()"> GetCoordinates</button>
     <button onclick="clear_points()"> ClearMarkers</button>
     <button onclick="getLocation()">GPS Coordination</button>
     <button onclick="addrobot()">canvasrobocontrol</button>
     <button onclick="robotdirection()">robot direction</button>
     <button onclick="robotstart()">robot start</button>
       <button id="test" onclick="test()">Ready</button>
     </div>
  <div id="button-box"  style="background-color:darkgray;width:max-content;height:max-content;padding:10px; " >
    <div onclick="choseone(event)"> 
  <img src="images/flag.png" alt="Smiley face" height="24" width="24">
   </div> 
  <div onclick="choseone2(event)"> 
  <img src="images/marker.png" alt="Smiley face" height="24" width="24">
   </div> 
<div onclick="choseone3(event)"> 
  <img src="/images/car.png" alt="Smiley face" height="24" width="24">
   </div> 
    </div>



<canvas onclick="cnvs_setCoordinates(event)" id="coordiv" width="600" height="428"  style="position:absolute;top:30px;left:60px;border:1px solid #c3c3c3" ></canvas>

<canvas onclick="cnvs_setCoordinates(event)" id="coordivrobo" width="600" height="428"  style="position:absolute;top:30px;left:800px;border:1px solid #c3c3c3" ></canvas>
  
<div id="xycoordinates2"></div>
<div id="div1" style="position:absolute; top:500px;background-color:lightcoral; width: 110px; height:110px;overflow:scroll;" >
<p id="p1">map 1 pixel  = 0,3125  m</p>
<p id="p2">notes</p>
<p id="demo"></p>
</div>

<script>
 // var obj = { coordinates: [] };
 var coordinates = [];
 var json;
 var c = document.getElementById("coordiv");
 var cr = document.getElementById("coordivrobo");
 var ctx = c.getContext("2d");
 var ctr = cr.getContext("2d");
 var img = new Image();
 var img2 = new Image();
 var robot = new Image();
                                                                  img.src = "images/flag.png";
                                                                  img2.src = "images/unimap.jpg";
                                                                  robot.src = "images/robotvac.png";
 var tut = 0 ;
 var i = 0;
 var stored_coordinates;
 var counter=0;
var getcor = []
 var bank = {'x':'','y':'', 'type':'','info':''};
 function robotdirection() {
 var tekrar= setInterval(function(){
     if ( tut == 1) 
{ 
robot.src = "images/roboleft.png";
ctr.clearRect(0, 0, cr.width, cr.height);
//console.log( tut);
ctr.drawImage(robot,counter,100);
}
 if ( tut == 2 ) 
{ 
  robot.src = "images/roboright.png";
  ctr.clearRect(0, 0, cr.width, cr.height);
//  console.log( tut);
  ctr.drawImage(robot,counter,100);
}
if (tut == 3) 
{ 
   robot.src = "images/roboleft.png";
   ctr.clearRect(0, 0, cr.width, cr.height);
  // console.log( tut);
   ctr.drawImage(robot,counter,100);
}

console.log(tut);
console.log(counter);
counter= counter+1;
 if(counter == 100 )
  {
   clearInterval(tekrar);
  
  
  }

  }, 50);



 }

 function robotstart(){
   
axios.get('/coco').then(resp => {
    var k = 0 ; 
    for(k=0;k<=resp.data.length;k++){
        bank[k] = resp.data[k];
        getcor.push(bank[k]);
        console.log(getcor[k]);
         console.log(resp.data.length);
    }
    
   document.getElementById("test").style.backgroundColor ="#34eb6e";  
  
  }).catch(error => {
    console.log(error.response)
  });
     console.log(getcor[0]," point");
     console.log(getcor[1]," point");
     console.log(getcor[2]," point");
 }

function test() {
  var xcounter = 0;
  var ycounter = 0;
  var cox;
  var coy; 
  var distance = 0 ;
  var rox =0 ;
  var roy = 0;
  var absolutexc = 0;
  var coup = 0;
  var cop ;
  var shiftx = 100;
  var shifty= 75;
  var gogo = setInterval(function(){
      
      cox = getcor[coup+1].x - getcor[coup].x;
      coy = getcor[coup+1].y - getcor[coup].y;
      distance   = Math.sqrt((cox*cox)+(coy*coy));
    if( distance > absolutexc )
    { 
      
      rox = xcounter + getcor[coup].x-10;
      roy = ycounter + getcor[coup].y-10;
        
       
      ctr.clearRect(20, 20, cr.width+100, cr.height+100);
      for(var c = 0;c<getcor.length-1;c++)
      {
        ctr.beginPath();
ctr.arc(shiftx+(80*(c-2)), shifty, 25, 0, 2 * Math.PI);
ctr.stroke();
   ctr.beginPath();
ctr.arc(shiftx+(80*(c-2)), shifty+100, 25, 0, 2 * Math.PI);
ctr.stroke();
   ctr.beginPath();
ctr.arc(shiftx+(80*(c-2)), shifty+200, 25, 0, 2 * Math.PI);
ctr.stroke();
   ctr.beginPath();
ctr.arc(shiftx+(80*(c-2)), shifty+300, 25, 0, 2 * Math.PI);
ctr.stroke();
ctr.drawImage(img,getcor[c].x,getcor[c].y);
    
      }
         
      ctr.drawImage(robot,rox,roy);
      xcounter = xcounter + cox/distance;
      ycounter = ycounter + coy/distance;
     absolutexc = Math.abs(xcounter);
       console.log("gogo",distance,xcounter,ycounter,rox,roy);
       console.log("arraylegth",getcor.length,coup);
      if ( absolutexc > distance) { 

      coup = coup + 1;
      xcounter = 0 ;
      ycounter = 0;
      absolutexc = 0;
        console.log("gogo",distance,xcounter,ycounter,rox,roy);
    }
    }
        if(coup == getcor.length-2) {
          clearInterval(gogo);
        }
  
    
   
  
},60);
  

}





function addrobot() { 

  axios.get('/coco').then(resp => {
    //console.log(resp.data);
    
    ctr.drawImage(robot,0,0);
   
     ctr.moveTo(resp.data[0].x, resp.data[0].y);
     for(i=1;i<resp.data.length;i++)
    {
       ctr.lineTo(resp.data[i].x, resp.data[i].y);
    }
            ctr.closePath();
            ctr.stroke();
           
    for(i=0;i<resp.data.length;i++)
    {
              console.log(resp.data[i]);
              get_img(resp.data[i].type);
              ctr.drawImage(img,resp.data[i].x-40,resp.data[i].y-60);
              var para = document.createElement("p");
              para.onclick = cnvs_clearCoordinates;
              var node = document.createTextNode(resp.data[i].info + "  " +resp.data[i].type );
              para.appendChild(node);
              var element = document.getElementById("div1");
              element.appendChild(para);
    };
   
  }).catch(error => {
    console.log(error.response)
  });
  }



function get_img(tut){
    if(tut == 1) {
      img.src = "images/flag.png";
      }
    if(tut == 2) {
      img.src = "images/marker.png";
      }
    if(tut == 3) {
      img.src = "images/car.png";
      }
  }
  function clear_points(){
  ctx.clearRect(0, 0, c.width,c.height);
  ctx.drawImage(img2,0,0);
  console.log(c.width,c.height);
  }
  var x = document.getElementById("demo");

function getLocation() {
  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(showPosition);
  } else { 
    x.innerHTML = "Geolocation is not supported by this browser.";
  }
}
//******************************

		/*	function showDistance(lat1, long1, lat2, long2) {
				var distance = distanceInKmBetweenEarthCoordinates(lat1, long1, lat2, long2);
				var distance_mile = distance * 0.62137119224;
				var distance_nautical_miles = distance * 0.539957;
				var distance_meters = distance * 1000;
				document.getElementById('distance').innerHTML = "The distance is between the two gps coordinates is <br /><b>"+ distance.toFixed(2) +"</b> KM or <br /><b>"+distance_mile.toFixed(2)+"</b> Miles or <br /><b>"+distance_nautical_miles.toFixed(2)+"</b> Nautical miles or <br /><b>"+distance_meters.toFixed(2)+"</b> meters";
			}
function distanceInKmBetweenEarthCoordinates(lat1, lon1, lat2, lon2) {
  var p = 0.017453292519943295;    // Math.PI / 180
  var c = Math.cos;
  var a = 0.5 - c((lat2 - lat1) * p)/2 + 
          c(lat1 * p) * c(lat2 * p) * 
          (1 - c((lon2 - lon1) * p))/2;

  return 12742 * Math.asin(Math.sqrt(a)); // 2 * R; R = 6371 km
}*/



//****************************
function showPosition(position) {
  x.innerHTML = "Latitude: " + position.coords.latitude + 
  "<br>Longitude: " + position.coords.longitude;
}
function cnvs_setCoordinates(event){
  var rect = c.getBoundingClientRect();
  var x = event.clientX-rect.left-4;
  var y = event.clientY-rect.top-4;
  var coords = "X coords: " + x + ", Y coords: " + y;
  document.getElementById("xycoordinates2").innerHTML=coords;

  var myobj = {'x':'','y':'', 'type':'','info':''};
  myobj.x = x;
  myobj.y = y;
  myobj.type = tut;
  myobj.info =  prompt("info gir");
 
  coordinates.push(myobj);
  json = JSON.stringify(coordinates);
  axios.post('/test',{params:{filename:"myjsonfile"},data:json})
      .then(response => { 
          console.log(response.data)
        })
      .catch(error => {
            console.log(error.response)
        });
  i++;

  localStorage.setItem("coordinates", JSON.stringify(coordinates));

  get_img(tut);
  ctx.drawImage(img,x,y);

 }
function get_coordinates(){
  axios.get('/coco').then(resp => {
    //console.log(resp.data);
    ctx.drawImage(img2,0,0);
     ctx.moveTo(resp.data[0].x, resp.data[0].y);
     for(i=1;i<resp.data.length;i++)
    {
       ctx.lineTo(resp.data[i].x, resp.data[i].y);
    }
            ctx.closePath();
            ctx.stroke();
           
    for(i=0;i<resp.data.length;i++)
    {
              console.log(resp.data[i]);
              get_img(resp.data[i].type);
              ctx.drawImage(img,resp.data[i].x-16,resp.data[i].y-32);
              var para = document.createElement("p");
              para.onclick = cnvs_clearCoordinates;
              var node = document.createTextNode(resp.data[i].info + "  " +resp.data[i].type );
              para.appendChild(node);
              var element = document.getElementById("div1");
              element.appendChild(para);
    };
   
  }).catch(error => {
    console.log(error.response)
  });
  }

function addpoints(){
   stored_coordinates = JSON.parse(localStorage.getItem("coordinates"));
  for(i=0; i<stored_coordinates.length; i++)
   {
    console.log(stored_coordinates[i]);
    ctx.drawImage(get_img(stored_coordinates[i].type),stored_coordinates[i].x,stored_coordinates[i].y);
   }
 }



function cnvs_clearCoordinates()
{
console.log("out out ");
}
function choseone(){
tut = 1 ; 
console.log(tut);
}
function choseone2(){
tut = 2 ; 
console.log(tut);
}
function choseone3(){
tut = 3 ; 
console.log(tut);
}
</script>
</body>
</html>